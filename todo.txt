New Features
			
Bug Fixes / Incremental Improvements

	Playlist track album propegation
		Right now I have it updating in currentListWatcher
		An alternative is to write the album data out to playlist file as a comment I think that might b egood

	Hotkeys aren't consumed, so they are passed to the current window. 
		Check windows and OSX
		Create website /help/linux-globalhotkey-consume/
		
	MusicFileVisitor > visitFile ->Info: Unable to load Track -- Give more info about track
	
	Dirty Mushrooms - Try to edit tag -- No table
				
Post Beta New Features		
	Add default sort column choice, like shuffle and repeat
	
	Persist sort options
	
	Album list - Display disc and release type in different color font
					
Post Beta fixes / updates / improvements 

	Show something on art boxes to differentiate between artist and album, especially when drag & dropping
	
	Icons on popup windows
			
	~incomplete/Grizzly Bear
		F2 to show tag editor, no content in table
		
	Sometimes there are duplicated tracks in the track list
	
	Show images in tag window
		Allow the deletion of embedded images
		
	Change css selector for .scroll-bar:horizontal to an applied class, so only chosen h-scrollbars are hidden

	Library load and unload time
	
	have filter boxes share text, so they feel like one box. 
	
	UI thread crashes a lot. When it does, I can't resize window
		I fixed some places where this can happen. Are there others? Need to watch for them. 

	Show play / pause icon on taskbar
	
	Dark theme for about tab settings
	
	Tag Window change "Track" to "Track #"
	
JavaFX stuff
	hide/show via hotkeys while maximized toggles every 3 presses instead of every 2 presses. 
		https://stackoverflow.com/questions/45269173/stage-seticonified-and-stage-isiconified-not-acting-properly
	
	While loading the library, the table view scrolls a little bit. 
	
	Tiny drop shadow on transport buttons when in dark theme. It's the line HBox, VBox, #transport { ... -fx-background-color: #222222 ... }
	
Refactor / organize my code. 
 	Make LibraryUpdater part of Library. Is there a way to abstract out the Platform -> RunLater part? I feel like we're just stuck w/ that, which kind of ties to us JavaFX. 
 		Maybe ui.runMe ( Runnable ), and then the UI can decide whether to launch a new thread, have a thread idling, do it on this thread, or use something like Platform.runLater()	

 	Make MainWindow its own class, and have FXUI be more of a simple manager? 
 	
	use observable values for all of the track and album stuff, so we don't have to do refreshes
	
	a better structure for persister
	
	a better structure for hotkey commands (maybe combine with commandline commands?)

Decoders
	Mp4
		buffered input stream on the random access File stream
		
	Ogg
		Works, seeking is done using read() instead of skip(), so it's a little slow.
		
	m4b - Fast play for some reason
		https://stackoverflow.com/questions/44750751/why-are-m4bs-playing-at-faster-speeds
		I need to set the sample rate to one of these: 96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350 
		The files seem te report the wrong sample rate. JAAD acutally reads them. 
		
	Flac
		Can we get flacplayer.java to play things that we need jflac for:
			Adrian Orange
			A Perfect Circle - Mer de noms
			Pink Floyd - Pulse (disc 1)
			
		buffered input stream on the random access File stream
		
	Test Cases
		organfinale.wav
			No line matching interface SourceDataLine supporting format PCM_FLOAT 44100.0 Hz, 32 bit, stereo, 8 bytes/frame,  is supported.
			at javax.sound.sampled.AudioSystem.getLine(AudioSystem.java:479)
			at net.joshuad.musicplayer.players.WavPlayer.openStreamsAtRequestedOffset(WavPlayer.java:133)
		
		Leonard Cohen - You want it Darker
			No volume control

		three-silver.ogg
			Long files take a long time to seek
			Long load time
			
		normal.wav
			Slow seek
			
		c304-2.wav
			Slow load, slow seek
		
		long.m4a
			No load

		normal.ogg
			Trouble seeking
		
	Wav
		BufferedInputStream

OS Specific		
	All:
		https://stackoverflow.com/questions/7506329/embed-java-into-a-c-application

	Windows
		Open-with shell integration
		Installer
	    Standalone build (32-bit)
		Rename java process to Hypnos
		
	Windows <= 7
		Font rendering on utf glyphs
		
	Linux
		Debian Installer
	    redhat installer
	    pacman installer
		use a compiled launcher rather than a script -- it allows shell double click. 
		Standalone build - Linux64 embedded JRE
		Standalone build - Linux32 embedded JRE
		Rename java process to Hypnos
		
		Gnome3 
			Right click -> Open with -- loads the files to current list, but doesn't start playing. 
			
		Always use Dejavu font? 
	
	OSX
		Does our package work? 
		Open-with shell integration
		.DMG installer
		Rename java process to Hypnos ?
		
		Always use LucidaGrande font?
		Test global hotkeys
		
	Tray icon
		Gnome 3 doesn't support. Code works but creates a bad entry on taskbar.
		What systems do support? 
		What other systems don't support? How to handle? 
		https://stackoverflow.com/questions/29995727/java-systemtray-icon-does-not-always-work
		
	Embed and use a font with all needed UTF glyphs
		≡✘⏏💾⇉🔀⇥🔁🔂🔇🔈🔉🔊⚙
		
		DejaVu Sans - The thing I'm using on nix
		Calibri - Windows
		Lucida Grande - OSX
		
			try { 
			    Font.loadFont(new FileInputStream(new File("stage/font/dejavu/DejaVuSans.ttf")), 12);
			    Font.loadFont(new FileInputStream(new File("stage/font/dejavu/DejaVuSans-Bold.ttf")), 12);
				File stylesheet = new File ( "stage/font/font.css" );
			    scene.getStylesheets().add( "file:///" + stylesheet.getAbsolutePath().replace( "\\", "/" ) ); 
		    } catch (FileNotFoundException e) {
		    	//TODO: 
		    	e.printStackTrace();
		    }


Future Features, maybe:

	System tray

	Tag Window, next and previous button
		
	Drag and drop from misc places to system
		playlist table -> m3u
		track table, history, queue, info windows, current table -> single tracks
		album table -> folder
	
	Tab in settings window for in-program hotkeys. 
			
	Add tag image info to tag window
	
	backup playlists
	
	Warn before discarding unsaved playlist -- button order (Yes, no, cancel instead of No, Yes, Cancel)	
		
	
	
		
Label localLabel = new Label ( "Hypnos Hotkeys" );
		localLabel.setPadding( new Insets ( 0, 0, 10, 0 ) );
		localLabel.setWrapText( true );
		localLabel.setTextAlignment( TextAlignment.CENTER );
		localLabel.setStyle( "-fx-alignment: center; -fx-font-size: 20px; -fx-font-weight: bold" );
		globalContent.add( localLabel, 0, row, 2, 1 );
		GridPane.setHalignment( localLabel, HPos.CENTER );
		row++;
		
		Label localDescriptionLabel = new Label ( "These hotkeys will work whenever hypnos has focus." );
		localDescriptionLabel.setPadding( new Insets ( 0, 0, 20, 0 ) );
		localDescriptionLabel.setWrapText( true );
		localDescriptionLabel.setTextAlignment( TextAlignment.CENTER );
		globalContent.add( localDescriptionLabel, 0, row, 2, 1 );
		GridPane.setHalignment( localDescriptionLabel, HPos.CENTER );
		row++;
		
		Label clearLabel = new Label ( "Clear Selection:" );
		Label queueLabel = new Label ( "Enqueue:" );
		Label editLabel = new Label ( "Edit:" );
		Label infoLabel = new Label ( "Info:" );
		Label browseLabel = new Label ( "Browse Filesystem:" );
		Label playLabel = new Label ( "Play:" );
		Label appendLabel = new Label ( "Append:" );
		Label removeLabel = new Label ( "Remove:" );
		Label cropLabel = new Label ( "Crop:" );
		
		clearLabel.setTextAlignment ( TextAlignment.RIGHT );
		queueLabel.setTextAlignment ( TextAlignment.RIGHT );
		editLabel.setTextAlignment ( TextAlignment.RIGHT );
		infoLabel.setTextAlignment ( TextAlignment.RIGHT );
		browseLabel.setTextAlignment ( TextAlignment.RIGHT );
		playLabel.setTextAlignment ( TextAlignment.RIGHT );
		appendLabel.setTextAlignment ( TextAlignment.RIGHT );
		removeLabel.setTextAlignment ( TextAlignment.RIGHT );
		cropLabel.setTextAlignment ( TextAlignment.RIGHT );
		
				
		Label clearValue = new Label ( "Escape" );
		Label queueValue = new Label ( "Q" );
		Label editValue = new Label ( "F2" );
		Label infoValue = new Label ( "F3" );
		Label browseValue = new Label ( "F4" );
		Label playValue = new Label ( "Enter" );
		Label appendValue = new Label ( "Shift + Enter" );
		Label removeValue = new Label ( "Delete" );
		Label cropValue = new Label ( "Shift + Delete" );
		
		clearValue.setTextAlignment ( TextAlignment.RIGHT );
		queueValue.setTextAlignment ( TextAlignment.RIGHT );
		editLabel.setTextAlignment ( TextAlignment.RIGHT );
		infoLabel.setTextAlignment ( TextAlignment.RIGHT );
		browseLabel.setTextAlignment ( TextAlignment.RIGHT );
		playLabel.setTextAlignment ( TextAlignment.RIGHT );
		appendLabel.setTextAlignment ( TextAlignment.RIGHT );
		removeLabel.setTextAlignment ( TextAlignment.RIGHT );
		cropLabel.setTextAlignment ( TextAlignment.RIGHT );
		
		
		localContent.add( clearLabel, 0, row );
		localContent.add( clearValue, 1, row );
		localContent.add( queueLabel, 2, row );
		localContent.add( queueValue, 3, row );
		row++;
		
		localContent.add( editLabel, 0, row );
		localContent.add( editValue, 1, row );
		localContent.add( infoLabel, 2, row );
		localContent.add( infoValue, 3, row );
		row++;	
