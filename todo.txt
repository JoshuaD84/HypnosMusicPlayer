New Features
	Log to file, how does that work inside java? 
			
	Tab in settings window for in-program hotkeys. 
		
	Drag and drop from misc places to system
		playlist table -> m3u
		track table, history, queue, info windows, current table -> single tracks
		album table -> folder
				
	Setting album image for flac file currently playing causes exception in decoder. 

	
Bug Fixes / Incremental Improvements

	No Track playing and you hit escape on the current list -> remove images?

	Font size on transport tooltips 
	
	Playlist Info Window doesn't stay up to date as the list is changed
		CurrentList == Playlist doesn't edit when playlist info window is edited
			Probably just mark it as changed, don't change the list. 
		
	Add tag image info to tag window

	Volume mchange / mute when there is no track loaded.
	
	Save after modifing stuff more frequently. Playlist delete. 

	Adding tracks to a playlist doesn't refresh the playlist info screen
	
	Save hotkeys and settings configuratin whenever you close config and info window. 

	Hotkeys aren't consumed, so they are passed to the current window. >:-O
		Check windows and OSX
		for Linux, just add a label to the dialog and tell them to consume the hotkey using some other program

	try to play a missing file. It keeps throwing exception. Only throw it once.
			
	Make sure horizontal scroll bars never appear
		6/9 - Can't find anything on google.
	
	Persister.loadCurrentList()
		This is from trying to run a new version of hypnos after having data from a previous version. 
		Jul 15, 2017 5:42:38 PM net.joshuad.hypnos.Hypnos start
		SEVERE: Exception caught at top level of Hypnos. Exiting.
		java.lang.ClassCastException: java.util.ArrayList cannot be cast to net.joshuad.hypnos.CurrentListState
			at net.joshuad.hypnos.Persister.loadCurrentList(Unknown Source)
			at net.joshuad.hypnos.Persister.loadDataBeforeShowWindow(Unknown Source)
			at net.joshuad.hypnos.Hypnos.start(Unknown Source)
			at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$8(LauncherImpl.java:863)
			at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$7(PlatformImpl.java:326)
			at com.sun.javafx.application.PlatformImpl.lambda$null$5(PlatformImpl.java:295)
			at java.security.AccessController.doPrivileged(Native Method)
			at com.sun.javafx.application.PlatformImpl.lambda$runLater$6(PlatformImpl.java:294)
			at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
			at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method)
			at com.sun.glass.ui.gtk.GtkApplication.lambda$null$5(GtkApplication.java:139)
			at java.lang.Thread.run(Thread.java:748)
				
	Make the tag error window more user-friendly. 
	
	hide/show via hotkeys while maximized toggles every 3 presses instead of every 2 presses. 
	https://stackoverflow.com/questions/45269173/stage-seticonified-and-stage-isiconified-not-acting-properly
	
	While loading the library, the table view scrolls a little bit. 
	
	
Refactor / organize my code. 
 	Make LibraryUpdater part of Library. Is there a way to abstract out the Platform -> RunLater part? I feel like we're just stuck w/ that, which kind of ties to us JavaFX. 
 		Maybe ui.runMe ( Runnable ), and then the UI can decide whether to launch a new thread, have a thread idling, do it on this thread, or use something like Platform.runLater()	

 	Make MainWindow its own class, and have FXUI be more of a simple manager? 
 	
	use observable values for all of the track and album stuff, so we don't have to do refreshes
	
	a better structure for persister
	
	a better structure for tag error log
	
	a better structure for hotkey commands (maybe combine with commandline commands?)

Decoders
	Mp4
		buffered input stream on the random access File stream
		
	Ogg
		Works, seeking is done using read() instead of skip(), so it's a little slow.
		
	m4b - Fast play for some reason
		https://stackoverflow.com/questions/44750751/why-are-m4bs-playing-at-faster-speeds
		I need to set the sample rate to one of these: 96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350 
		The files seem te report the wrong sample rate. JAAD acutally reads them. 
		
	Flac
		Can we get flacplayer.java to play things that we need jflac for:
			Adrian Orange
			A Perfect Circle - Mer de noms
			Pink Floyd - Pulse (disc 1)
			
		buffered input stream on the random access File stream
		
	Test Cases
		organfinale.wav
			No line matching interface SourceDataLine supporting format PCM_FLOAT 44100.0 Hz, 32 bit, stereo, 8 bytes/frame,  is supported.
			at javax.sound.sampled.AudioSystem.getLine(AudioSystem.java:479)
			at net.joshuad.musicplayer.players.WavPlayer.openStreamsAtRequestedOffset(WavPlayer.java:133)
		
		Leonard Cohen - You want it Darker
			No volume control

		three-silver.ogg
			Long files take a long time to seek
			Long load time
			
		normal.wav
			Slow seek
			
		c304-2.wav
			Slow load, slow seek
		
		long.m4a
			No load

		normal.ogg
			Trouble seeking
		
	Wav
		BufferedInputStream

OS Specific		
	All:
		https://stackoverflow.com/questions/7506329/embed-java-into-a-c-application

	Windows
		Open-with shell integration
		Installer
	    Standalone build (32-bit)
		Rename java process to Hypnos
		Always use embedded calibri font? Only on systems <= win 7?
		Test global hotkeys
		
	Linux
		Open-with shell integration
		Debian Installer
	    redhat installer
	    pacman installer
		use a compiled launcher rather than a script -- it allows shell double click. 
		Standalone build - Linux64 embedded JRE
		Standalone build - Linux32 embedded JRE
		Rename java process to Hypnos
		
		Gnome3 
			Right click -> Open with -- loads the files to current list, but doesn't start playing. 
			
		Always use Dejavu font? 
	
	OSX
		Does our package work? 
		Open-with shell integration
		.DMG installer
		Rename java process to Hypnos ?
		
		Always use LucidaGrande font?
		Test global hotkeys
		
	Tray icon
		Gnome 3 doesn't support. Code works but creates a bad entry on taskbar.
		What systems do support? 
		What other systems don't support? How to handle? 
		https://stackoverflow.com/questions/29995727/java-systemtray-icon-does-not-always-work
		
	Embed and use a font with all needed UTF glyphs
		‚â°‚úò‚èèüíæ‚áâüîÄ‚á•üîÅüîÇüîáüîàüîâüîä‚öô
		
		DejaVu Sans - The thing I'm using on nix
		Calibri - Windows
		Lucida Grande - OSX
		
			try { 
			    Font.loadFont(new FileInputStream(new File("stage/font/dejavu/DejaVuSans.ttf")), 12);
			    Font.loadFont(new FileInputStream(new File("stage/font/dejavu/DejaVuSans-Bold.ttf")), 12);
				File stylesheet = new File ( "stage/font/font.css" );
			    scene.getStylesheets().add( "file:///" + stylesheet.getAbsolutePath().replace( "\\", "/" ) ); 
		    } catch (FileNotFoundException e) {
		    	//TODO: 
		    	e.printStackTrace();
		    }


Future Features, maybe:
	Tag Window, next and previous button
	
	Dark Stylesheet 
	
	

	
	
	
	
	
Label localLabel = new Label ( "Hypnos Hotkeys" );
		localLabel.setPadding( new Insets ( 0, 0, 10, 0 ) );
		localLabel.setWrapText( true );
		localLabel.setTextAlignment( TextAlignment.CENTER );
		localLabel.setStyle( "-fx-alignment: center; -fx-font-size: 20px; -fx-font-weight: bold" );
		globalContent.add( localLabel, 0, row, 2, 1 );
		GridPane.setHalignment( localLabel, HPos.CENTER );
		row++;
		
		Label localDescriptionLabel = new Label ( "These hotkeys will work whenever hypnos has focus." );
		localDescriptionLabel.setPadding( new Insets ( 0, 0, 20, 0 ) );
		localDescriptionLabel.setWrapText( true );
		localDescriptionLabel.setTextAlignment( TextAlignment.CENTER );
		globalContent.add( localDescriptionLabel, 0, row, 2, 1 );
		GridPane.setHalignment( localDescriptionLabel, HPos.CENTER );
		row++;
		
		Label clearLabel = new Label ( "Clear Selection:" );
		Label queueLabel = new Label ( "Enqueue:" );
		Label editLabel = new Label ( "Edit:" );
		Label infoLabel = new Label ( "Info:" );
		Label browseLabel = new Label ( "Browse Filesystem:" );
		Label playLabel = new Label ( "Play:" );
		Label appendLabel = new Label ( "Append:" );
		Label removeLabel = new Label ( "Remove:" );
		Label cropLabel = new Label ( "Crop:" );
		
		clearLabel.setTextAlignment ( TextAlignment.RIGHT );
		queueLabel.setTextAlignment ( TextAlignment.RIGHT );
		editLabel.setTextAlignment ( TextAlignment.RIGHT );
		infoLabel.setTextAlignment ( TextAlignment.RIGHT );
		browseLabel.setTextAlignment ( TextAlignment.RIGHT );
		playLabel.setTextAlignment ( TextAlignment.RIGHT );
		appendLabel.setTextAlignment ( TextAlignment.RIGHT );
		removeLabel.setTextAlignment ( TextAlignment.RIGHT );
		cropLabel.setTextAlignment ( TextAlignment.RIGHT );
		
				
		Label clearValue = new Label ( "Escape" );
		Label queueValue = new Label ( "Q" );
		Label editValue = new Label ( "F2" );
		Label infoValue = new Label ( "F3" );
		Label browseValue = new Label ( "F4" );
		Label playValue = new Label ( "Enter" );
		Label appendValue = new Label ( "Shift + Enter" );
		Label removeValue = new Label ( "Delete" );
		Label cropValue = new Label ( "Shift + Delete" );
		
		clearValue.setTextAlignment ( TextAlignment.RIGHT );
		queueValue.setTextAlignment ( TextAlignment.RIGHT );
		editLabel.setTextAlignment ( TextAlignment.RIGHT );
		infoLabel.setTextAlignment ( TextAlignment.RIGHT );
		browseLabel.setTextAlignment ( TextAlignment.RIGHT );
		playLabel.setTextAlignment ( TextAlignment.RIGHT );
		appendLabel.setTextAlignment ( TextAlignment.RIGHT );
		removeLabel.setTextAlignment ( TextAlignment.RIGHT );
		cropLabel.setTextAlignment ( TextAlignment.RIGHT );
		
		
		localContent.add( clearLabel, 0, row );
		localContent.add( clearValue, 1, row );
		localContent.add( queueLabel, 2, row );
		localContent.add( queueValue, 3, row );
		row++;
		
		localContent.add( editLabel, 0, row );
		localContent.add( editValue, 1, row );
		localContent.add( infoLabel, 2, row );
		localContent.add( infoValue, 3, row );
		row++;	